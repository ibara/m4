#!/bin/sh

# This configure script written by Brian Callahan <bcallah@openbsd.org>
# and released into the Public Domain.

cccheck() {
  if [ ! -z "$CC" ] ; then
cat << EOF > conftest.c
int main(void){return 0;}
EOF
    $CC -o conftest conftest.c > /dev/null 2>&1
    if [ $? -eq 0 ] ; then
      ./conftest
      if [ $? -eq 0 ] ; then
	rm -f conftest conftest.c
	cc="$CC"
	return 0
      else
	echo "could not build working executables"
	echo "Please ensure your C compiler is a native compiler"
	exit 1
      fi
    else
      rm -f conftest conftest.c
    fi
  fi

  for compiler in cc clang pcc xlc gcc ; do
cat << EOF > conftest.c
int main(void){return 0;}
EOF

    $compiler -o conftest conftest.c > /dev/null 2>&1

    if [ $? -eq 0 ] ; then
      ./conftest
      if [ $? -eq 0 ] ; then
	rm -f conftest conftest.c
	cc="$compiler"
	return 0
      else
	echo "could not build working executables"
	echo "Please ensure your C compiler is a native compiler"
	exit 1
      fi
    else
      rm -f conftest conftest.c
    fi
  done
  return 1
}

deadcheck() {
  cat << EOF > conftest.c
#include <stdlib.h>
__dead usage(void){exit(1);}int main(void){usage();return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

dead2check() {
  cat << EOF > conftest.c
#include <stdlib.h>
__dead2 usage(void){exit(1);}int main(void){usage();return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

noreturncheck() {
  cat << EOF > conftest.c
#include <stdlib.h>
void usage(void) __attribute__((__noreturn__)){exit(1);}int main(void){usage();return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

ohashinitcheck() {
  cat << EOF > conftest.c
#include <stddef.h>
#include <stdint.h>
#include <ohash.h>
int main(void){ohash_init(NULL, 0, NULL);return 0;} 
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

pledgecheck() {
  cat << EOF > conftest.c
#include <unistd.h>
int main(void){pledge(NULL,NULL);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

reallocarraycheck() {
  cat << EOF > conftest.c
#include <stdlib.h>
int main(void){reallocarray(NULL, 0, 0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

strlcpycheck() {
  cat << EOF > conftest.c
#include <string.h>
int main(void){strlcpy(NULL,NULL,0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

strtonumcheck() {
  cat << EOF > conftest.c
#include <stdlib.h>
int main(void){strtonum(NULL, 0, 0, NULL);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

wflagcheck() {
  cat << EOF > conftest.c
int main(void){return 0;}
EOF
  $cc -w -o conftest conftest.c > /dev/null 2> conftest.err
  grep ':' conftest.err > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.err conftest.c
    return 1
  else
    rm -f conftest conftest.err conftest.c
    return 0
  fi
}

# Option variables
if [ ! -z "$PREFIX" ] ; then
  prefix="$PREFIX"
else
  prefix="/usr/local"
fi

mandir="$prefix/man"

instprog="om4"
static=0

# Options
for opt
do
  case "$opt" in
    --prefix=*)
	prefix=`echo $opt | cut -d '=' -f 2`
	;;
    --mandir=*)
	mandir=`echo $opt | cut -d '=' -f 2`
	;;
    --disable-m4|--enable-m4)
	if [ "x$opt" = "x--enable-m4" ] ; then
	  instprog="m4"
	else
	  instprog="om4"
	fi
	;;
    --disable-static|--enable-static)
	if [ "x$opt" = "x--enable-static" ] ; then
	  static=1
	else
	  static=0
	fi
	;;
    --help|-h)
	echo "Usage: configure [options]"
	echo ""
	echo "Options:"
	printf "  --help or -h            "
	echo "Display this help message"
	printf "  --prefix=PREFIX         "
	echo "Top level install directory is PREFIX [$prefix]"
	printf "  --mandir=MANDIR         "
	echo "Manual pages are installed to MANDIR [$mandir]"
	printf "  --enable-m4             "
	echo "Binary name will be m4 [default=$instprog]"
	printf "  --enable-static         "
	echo "Statically link executables [default=no]"
	exit 1
	;;
    *)
	;;
  esac
done

if [ ! -z "$CFLAGS" ] ; then
  cflags="$CFLAGS -DEXTENDED -I."
else
  cflags="-DEXTENDED -I."
fi

if [ ! -z "$LDFLAGS" ] ; then
  ldflags="$LDFLAGS "
else
  ldflags=""
fi

if [ $static -ne 0 ] ; then
  ldflags="${ldflags}-static"
fi

printf "checking for C compiler... "
cccheck
if [ $? -ne 0 ] ; then
  echo "not found"
  echo "Please install a C compiler and re-run configure."
  exit 1
else
  echo "$cc"
fi

printf "checking for -w compiler flag... "
wflagcheck
if [ $? -ne 0 ] ; then
  echo "no"
else
  cflags="$cflags -w"
  echo "yes"
fi

printf "checking for OS... "
os=`uname -s`
echo "$os"

libs="-lm"

case "x$os" in
  "xLinux"|"xCYGWIN"*)
    cflags="$cflags -D_GNU_SOURCE"
    ;;
  "xOpenBSD")
    libs="$libs -lutil"
    ;;
  "xNetBSD")
    tflags="-D_OPENBSD_SOURCE"
    cflags="$cflags $tflags"
    ;;
esac

cat << EOF > config.h
/* This file automatically generated by configure.  */

EOF

printf "checking for __dead... "
deadcheck
if [ $? -eq 0 ] ; then
  echo "yes"
else
  echo "no"
  printf "checking for __dead2... "
  dead2check
  if [ $? -eq 0 ] ; then
    echo "#define __dead __dead2" >> config.h
    echo "yes"
  else
    printf "checking for __attribute__((__noreturn__))... "
    noreturncheck
    if [ $? -eq 0 ] ; then
      echo "#define __dead __attribute__((__noreturn__))" >> config.h
      echo "yes"
    else
      echo "#define __dead" >> config.h
      echo "no"
    fi
  fi
fi

printf "checking for ohash_init... "
ohashinitcheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_OHASH" >> config.h
  echo "yes"
else
  echo "no"
fi

printf "checking for pledge... "
pledgecheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_PLEDGE" >> config.h
  echo "yes"
else
  echo "no"
fi

printf "checking for reallocarray... "
reallocarraycheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_REALLOCARRAY" >> config.h
  echo "yes"
else
  echo "no"
fi

printf "checking for strlcpy... "
strlcpycheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_STRLCPY" >> config.h
  echo "yes"
else
  echo "no"
fi

printf "checking for strtonum... "
strtonumcheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_STRTONUM" >> config.h
  echo "yes"
else
  echo "no"
fi

printf "creating Makefile... "
cat << EOF > Makefile
# This Makefile automatically generated by configure.

CC =		$cc
CFLAGS =	$cflags
EOF

if [ ! -z "$ldflags" ] ; then
cat << EOF >> Makefile
LDFLAGS =	$ldflags
EOF
fi

cat << EOF >> Makefile
PREFIX =	$prefix
MANDIR =	$mandir
PROG =		$instprog

OBJS =	eval.o expr.o look.o main.o misc.o gnum4.o trace.o tokenizer.o \\
	parser.o ohash.o reallocarray.o strlcpy.o strtonum.o

all: \${PROG}

\${PROG}: \${OBJS}
	\${CC} \${LDFLAGS} -o \${PROG} \${OBJS} $libs

parser.c parser.h: parser.y
	yacc -d parser.y && mv y.tab.c parser.c && mv y.tab.h parser.h

tokenizer.o: parser.h

install:
	install -d \${DESTDIR}\${PREFIX}/bin
	install -d \${DESTDIR}\${MANDIR}/man1
	install -c -s -m 755 \${PROG} \${DESTDIR}\${PREFIX}/bin
	install -c -m 644 om4.1 \${DESTDIR}\${MANDIR}/man1/\${PROG}.1

test:
	echo "No tests"

clean:
	rm -f \${PROG} \${OBJS} parser.c parser.h

distclean: clean
	rm -f Makefile config.h
EOF
echo "done"
